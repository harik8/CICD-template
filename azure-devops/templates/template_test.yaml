---
parameters:
  - name: str
    type: string
    default: false
  - name: tag
    type: string
    default: latest
  - name: repo
    type: string

stages:
- stage:
  variables:
  - group: test
  - name: major
    value: $[variables.major_version]
  - name: minor
    value: $[variables.minor_version]
  - name: patch
    value: $[variables.patch_version]
  - name: tag
    ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
      value: $(major).$(minor).$(patch)
    ${{ else }}:
      value: $(major).$(minor).$(patch)-${{ parameters.str }}
  pool: Kubernetes
  jobs:
  - job: Continuous_Integration
    steps:
      - script: echo ${{ parameters.str }}
      - script: env
      - script: az

      - checkout: self
        fetchDepth: 2

      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            echo $(Build.SourcesDirectory)
            echo "Artifact name value is " $ArtifactName
            echo "##vso[task.setvariable variable=testVar;]TESTVAR"

      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            echo $(testVar)
        
      # - bash: |
      #     MANIFEST_PATH="helm"
      #     MODIFIED_FILES=$(git diff HEAD HEAD~ --name-only)
          
      #     CI_COUNT=0
      #     CD_COUNT=0
      #     SKIP_CI=false

      #     for FILE in $MODIFIED_FILES
      #     do
      #       if [[ $FILE == *$MANIFEST_PATH* ]]; then
      #         echo "CD [${FILE}] has changed"
      #         CD_COUNT=$(($CD_COUNT+1))
      #       else
      #         echo "CI [${FILE}] has changed"
      #         CI_COUNT=$(($CI_COUNT+1))
      #       fi
      #     done

      #     if [[ $CI_COUNT -eq 0 && $CD_COUNT -gt 0 ]]; then
      #       echo "SKIP CI - $SKIP_CI"
      #       echo "##vso[task.setvariable variable=SKIP_CI]false"
      #     else
      #       echo "SKIP CI - $SKIP_CI"
      #       echo "##vso[task.setvariable variable=SKIP_CI]true"
      #     fi

      #     echo "RUN CI STATUS - $(SKIP_CI)"
      #   displayName: Get Modified Files
  # # - job: BUILD
  # #   displayName: BUILD IMAGE
  #     - task: Docker@2
  #       displayName: Build an image
  #       inputs:
  #         repository: harik8/test
  #         containerRegistry: DockerHub
  #         command: buildAndPush
  #         dockerfile: "**/Dockerfile"
  #         tags: |
  #           $(tag)
  # # - job: PACKAGE
  # #   displayName: HELM PACKAGE
  #     - task: HelmDeploy@0
  #       displayName: Package Helm
  #       inputs:
  #         connectionType: none
  #         comamnd: package
  #         kubernetesServiceEndpoint: WSL-Minikube
  #         chartName: ${{ parameters.repo }}
  #         chartPath: ./helm
  #         valueFile: ./helm/values.yaml
  #         destination: '$(Build.ArtifactStagingDirectory)'
  #     - script: ls -lah  $(Build.ArtifactStagingDirectory)
    
